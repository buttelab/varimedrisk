================================================
 VARIMED risk prediction for a personal genome
================================================
2017-09-25

VARIMED is a compendium of curated case-control 
association studies of 2012 and earlier. 
It is a resource that can be used for various 
genotype-phenotype analyses. 
This set of scripts is for 
(1) formatting SNP genotype information from personal genome
(2) querying VARIMED mySQL tables
(3) for trait/disease risk prediction analyses using 
    the likelihood ratio (LR), and 
(4) also for generating RiskOgrams for visualization 
    in R. 
    
DISCLAIMER:
These scripts are considered to be in the development phase, 
and should be used as such.



NOTE: 
--Original scripts by Rong Chen and Alex Morgan, Butte Lab, Stanford (09/05/2012)                    
--Adapted scripts by Jieming Chen, Butte Lab, UCSF (03/15/17)

CONTENTS:
(A) FOLDERS
(B) varimed.sh
(C) PIPELINE
(D) MORE TIPS
(E) TROUBLESHOOTING


--------------------------------------------------------------------
 FOLDERS
--------------------------------------------------------------------
1) src             - Original scripts by Rong Chen and Alex Morgan, 
                     Butte Lab, Stanford (09/05/2012)
2) r_visualization - mostly R Markdown scripts for RiskOgrams, 
                     adapted from RiskGraph scripts in 'src' folder
3) varimed         - Perl scripts adapted from those in 'src' folder
                   - main script: varimed.sh

--------------------------------------------------------------------
 varimed/varimed.sh
--------------------------------------------------------------------

USAGE: 
               varimed.sh <flag> <...> >& my.log

--Type in varimed.sh <flag> for more documentation on syntax.
--This script tries semi-automate the use of VARIMED.

--It assumes the VariMed resource is on a mySQL server
--It requires the following to be installed and in PATH:
   1) vcftools
   2) bcftools
   3) loadgenotypefile2sql.py 
   (note that the SQL hostname, username and password are hardcoded 
   in here for convenience, so please change in code)
   4) bgzip
   
   
--FLAG (1-4):
1: annotate
>> Use bcftools to annotate ID column of VCF file using VCF.gz file; 
   output: vcf.gz file prefixed with user-defined sample/prefix name

E.g. varimed.sh annotate \
     dbSNP138 \
     genotypes.vcf.gz \
     dbSNP138.vcf.gz

2: upload
>> Filter only VARIMED IDs <rsID file> and upload genotypes to mySQL 
   server; output: vcf.gz file prefixed with 'varimed.snps'. 
   Currently, only SNP analyses, indels are explicitly removed.
>> NOTE also that currently X, Y and M chrs are included, so if your 
   var_ld tables do not contain these non-autosomes, your results will 
   be wrong (because LD accounting will spew errors).
 
E.g. varimed.sh upload \
     samplename \
     genotypes.vcf.gz \
     placeholder \
     rsID.txt \
     genotype_tablename \
     database_name

3: run
>> Run the risk prediction Perl scripts from wrapper: dz_risk_jc.pl
## E.g. varimed.sh run \
        hostname \
        username \
        database_name \
        password \
        genotype_tablename \
        varimed_databasename.varimed_tablename \
        LD_databasename.chr_EUR_spop \
        output_LR_tablename \
        output_dz_risk_tablename \
        output_snps_all_tablename \
        min_gwas_num \
        min_gwas_size \
        min_p_val \ 
        >& logfile

4: compile
>> Downloads the results from the mySQL database and then compile

E.g. varimed.sh compile \
     sample_list \
     databasename \
     >& logfile
##   sample_list = a 2-col file, with col1=sample-id, col2=population; no header
   
--------------------------------------------------------------------
 PIPELINE
--------------------------------------------------------------------

(1) Annotate VCF/BCF files with rsIDs
   
   use 'varimed.sh annotate <> '



(2) Format SNP genotype information from personal genome

--VARIMED genotype file format (include header):
col1 sample_ID: sample name (should be all the same)
col2 dbSNP    : dbSNP rsID (without 'rs', just the numbers)
col3 genotype : genotype in a 2-letter format: e.g. AA, CT

--This can be obtained by in a variety of ways: e.g. writing a script, using 
  bash one-liners, and bcftools (if sequencing information from BCF files)
--E.g. This bash/bcftools combo formats and removes records that are not
  SNPs, with empty genotypes and missing rsIDs. The command also removes
  'rs' prefixes and typical '/' and '|' in VCFs that denote phase information.
  bcftools view -s <VCF> | \
  bcftools query -f '[%CHROM\t%SAMPLE\t%ID\t%TGT]\n' | \
  awk '{OFS="\t"}{FS="\t"}{if($1 ~ /^[0-9]+$/ && length($4) > 2){print $2,$3,$4}}' | \
  grep -v "\." | \
  sed -e 's/\///g' -e 's/|//g' -e 's/rs//g' > <VAR-GENO-OUTPUT>
  
  

(3) Upload to mySQL database
   
   use 'varimed.sh upload <> '

## this requires manual modification of the Python script 
loadgenotypefile2sql.py




(4) Run dz_risk_jc.pl Perl wrapper script

--this step is the main workhorse for risk prediction
--each run is for one personal genome, for all the phenotypes
  in VARIMED
--dz_risk_jc.pl is the wrapper script that calls the other scripts
  a) integrate personal genome genotype
  b) account for LD (with defined parameters)
  c) combine LR across LD blocks

dz_risk_jc.pl > ./LR_patient_jc.pl
dz_risk_jc.pl > ./LR_meta_jc.pl
dz_risk_jc.pl > ./LR_R2_jc.pl
dz_risk_jc.pl > ./combine_LR_single_jc.pl

dz_risk_jc.pl
-d	Database name, e.g. proj_dz_risk
-i	Table name for input genome seq, e.g. P_genotype
-j	Table name for gender and ethnicity-specific LR, e.g. proj_patient_risk.LR_final
-k	Table name for ethnicity specific linkage	info, e.g. var_ld_data.chr_CEU_all
-r	Output table with full snp list, e.g.	p_snps_all
-o	Output table disease SNP LR, e.g.	p_snps
-q	Output table disease risk, e.g.	p_LR


./LR_patient_jc.pl 
# This program is to report LR for a patient 
# OUTPUT is a out_snps_all table


./LR_meta_jc.pl
# This program is to create an all_snps info merged table 
# For each broad_phenotype, for each genotype, and each SNP,  
# one integrated LR is calculated for each disease/SNP pair
# by combining log(LR) across studies weighted by size of study

./LR_R2_jc.pl
# This program is to select a single SNP  
# with the largest (gwas_study_size, total_cnt_gwas, 
# gwas_sample_size, study_cnt, sample_size)  
# for any pair of SNPs with R_square>=0.5, or distance of 40kb

-- note that the R_square and distance parameters have to be 
   hardcoded now in this script


./combine_LR_single_jc.pl
# This program is to report final risk for a patient by accumulating 
# all individual SNPs
# This program is to report final LR for a single patient by accumulating 
# all individual SNPs.





(5) RiskOgram visualization in R

RiskGraph_argument_JC.Rmd
RiskGraph_argument_compile_JC.Rmd




--------------------------------------------------------------------
 MORE TIPS
--------------------------------------------------------------------

1) You might want to create ethnicity-specific tables from the original
   VARIMED tables, using the population columns.
   
2) Look out for errors in phenotype names





--------------------------------------------------------------------
 TROUBLESHOOTING
--------------------------------------------------------------------

1) After running, check log files for "Lost Connection to mySQL server" 
   to re-run any sample with possibly incomplete or truncated runs. 
   The following command can be useful to execute especially when you have 
   bulk jobs:
>>>>>>    grep Lost *.log | more


2) Please remember to observe your mySQL hygiene: 
   e.g. INDEX all your mySQL tables for more efficient queries:
   
LR_patient.pl
--id (primary key)
--dbSNP  patient table
--(dbSNP, gwas_study_cnt, gwas_sample_size, Pmin)  VariMed (LR)

LR_meta.pl
--(Broad_phenotype, dbSNP, genotype)  VariMed (LR)
--(Broad_phenotype, study_id, dbSNP, genotype)  VariMed (LR)

LR_R2.pl
--(broad_phenotype, chromosome)  VariMed (LR)
--(broad_phenotype, chromosome) order by (gwas_study_cnt, study_cnt_total, gwas_sample_size, study_cnt)  VariMed (LR)
--(dbSNP2) (dbSNP1)  LD table ; (dbSNP, R_square) (broad_phenotype, chromosome, end, dbSNP)  VariMed (LR)

combine_single_LR.pl
--broad_phenotype, LR
--broad_phenotype


